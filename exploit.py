import random
import string

def gerar_cpf():
    cpf = [random.randint(0, 9) for _ in range(9)]
    for _ in range(2):
        soma = sum((10-i) * num for i, num in enumerate(cpf))
        digito = (soma * 10) % 11
        cpf.append(digito if digito < 10 else 0)
    return f"{''.join(map(str, cpf))}"

def gerar_cnpj():
    cnpj = [random.randint(0, 9) for _ in range(8)] + [0, 0, 0, 1]
    for _ in range(2):
        soma = sum(x*y for x, y in zip(cnpj, [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]))
        digito = (soma * 10) % 11
        cnpj.append(digito if digito < 10 else 0)
    return f"{''.join(map(str, cnpj))}"

def gerar_telefone():
    ddd = random.randint(11, 99)
    numero = f"9{random.randint(1000, 9999)}{random.randint(1000, 9999)}"
    return f"+55{ddd}{numero}"

def gerar_email():
    nomes = ["user", "pix", "random", "email", "teste"]
    dominios = ["gmail.com", "hotmail.com", "yahoo.com", "outlook.com"]
    return f"{random.choice(nomes)}{random.randint(100, 999)}@{random.choice(dominios)}"

def gerar_chave():
    opcoes = {
        "1": gerar_cpf,
        "2": gerar_cnpj,
        "3": gerar_telefone,
        "4": gerar_email
    }
    
    print("\nEscolha o tipo de chave Pix:")
    print("1 - CPF")
    print("2 - CNPJ")
    print("3 - Telefone")
    print("4 - E-mail")
    
    escolha = input("\nDigite o número correspondente: ")
    funcao = opcoes.get(escolha)
    
    if funcao:
        print(f"\nChave Pix gerada: {funcao()}\n")
    else:
        print("\nOpção inválida!")

if __name__ == "__main__":
    gerar_chave()
